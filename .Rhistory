use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
summary = summary(token, document)
summary
summary = gsub(“[\r\n]”, “”, summary)
summary = gsub("[\r\n]", "", summary)
summary
summary = gsub("[\r\n\t]", "", summary)
summary
summary_all = glue("{summary_all} {summary}")
summary_all
document = txt[2]
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
summary_all
summary = summary(token, document)
summary = gsub("[\r\n\t]", "", summary)
summary_all = glue("{summary_all} {summary}")
summary_all
df = data.frame(matrix(nrow = 0, ncol = 0))
for (x in 1:nrow(as.data.frame(txt))) {
newrows = as.data.frame(strsplit(txt, "\\n\\n")[[x]]) # chunk after each paragraph
newrows['page'] <- x # add page number
colnames(newrows) = colnames(df)
df = rbind(df, newrows)
}
colnames(df) <- c("Text_chunk","page")
View(df)
df = df[!(is.na(df$Text_chunk) | df$Text_chunk==""), ]
View(df)
library(TheOpenAIR)
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(TheOpenAIR)
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","tiktoken")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","tiktokens")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
devtools::install_github("umatter/OpenAIR")
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","devtools")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","devtools")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
install.packages("TheOpenAIR")
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue")
library(pdftools)
library(reticulate)
library(glue)
library(TheOpenAIR)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzExMH0.waXyiiWVTYaiHkpW2fuTcFx9-R67j3_FZBpm0yfEUFg"
# Load PDF file and parse ------------------------------------------------------
pdf_file = "Testfile.pdf"
txt = pdf_text(pdf_file)
document = txt[2] # select the page you want to summarize               --------> SEITE SETZEN
df = data.frame(matrix(nrow = 0, ncol = 0))
for (x in 1:nrow(as.data.frame(txt))) {
newrows = as.data.frame(strsplit(txt, "\\n\\n")[[x]]) # chunk after each paragraph
newrows['token_count'] = count_tokens(newrows)
newrows['page'] = x # add page number
colnames(newrows) = colnames(df)
df = rbind(df, newrows)
}
install.packages("TheOpenAIR")
devtools::install_github("umatter/OpenAIR")
remotes::install_github("umatter/OpenAIR")
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","remotes")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","remote")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(shiny)
library(shinyWidgets)
install.packages("TheOpenAIR")
install.packages("devtools")
install.packages("glue")
install.packages("TheOpenAIR")
library(pdftools)
library(reticulate)
library(glue)
library(TheOpenAIR)
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
renv::status()
?renv::status()
renv::snapshot()
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
df = data.frame(matrix(nrow = 0, ncol = 0))
for (x in 1:nrow(as.data.frame(txt))) {
newrows = as.data.frame(strsplit(txt, "\\n\\n")[[x]]) # chunk after each paragraph
#newrows['token_count'] = count_tokens(newrows)
newrows['page'] = x # add page number
colnames(newrows) = colnames(df)
df = rbind(df, newrows)
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue","TheOpenAIR")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(pdftools)
library(reticulate)
library(glue)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(pdftools)
library(reticulate)
library(glue)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzExMH0.waXyiiWVTYaiHkpW2fuTcFx9-R67j3_FZBpm0yfEUFg"
# Load PDF file and parse ------------------------------------------------------
pdf_file = "Testfile.pdf"
txt = pdf_text(pdf_file)
df = data.frame(matrix(nrow = 0, ncol = 0))
for (x in 1:nrow(as.data.frame(txt))) {
newrows = as.data.frame(strsplit(txt, "\\n\\n")[[x]]) # chunk after each paragraph
#newrows['token_count'] = count_tokens(newrows)
newrows['page'] = x # add page number
colnames(newrows) = colnames(df)
df = rbind(df, newrows)
}
View(df)
colnames(df) <- c("Text_chunk","page")
df = df[!(is.na(df$Text_chunk) | df$Text_chunk==""), ]
View(df)
length(df)
nrow(txt)
nrow(df)
df[1]
df[1,1]
test = df[1,1]
summary = summary(token, test)
summary
test = df[1,2]
summary = summary(token, test)
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
test = df[1,2]
summary = summary(token, test)
summary
summary = summary(token, test)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
summary = summary(token, test)
summary
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
test = df[1,4]
summary = summary(token, test)
summary
test = df[1,5]
test = df[1,6]
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(pdftools)
library(reticulate)
library(glue)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzExMH0.waXyiiWVTYaiHkpW2fuTcFx9-R67j3_FZBpm0yfEUFg"
# Load PDF file and parse ------------------------------------------------------
pdf_file = "Testfile.pdf"
txt = pdf_text(pdf_file)
document = txt[2] # select the page you want to summarize               --------> SEITE SETZEN
test = df[1,6]
df = data.frame(matrix(nrow = 0, ncol = 0))
for (x in 1:nrow(as.data.frame(txt))) {
newrows = as.data.frame(strsplit(txt, "\\n\\n")[[x]]) # chunk after each paragraph
#newrows['token_count'] = count_tokens(newrows)
newrows['page'] = x # add page number
colnames(newrows) = colnames(df)
df = rbind(df, newrows)
}
colnames(df) <- c("Text_chunk","page")
df = df[!(is.na(df$Text_chunk) | df$Text_chunk==""), ]
test = df[1,6]
test
test = df[1,1]
test = df[1,2]
test = df[1,3]
test = df[1,4]
test = df[1,5]
test = df[1,10]
View(df)
test = df[1,16]
test
test = df[1,1]
test
test = as.string(df[1,1])
test = as.character(df[1,1])
test
test = as.character(df[1,2])
test
test = as.character(df[1,3])
test
test = as.character(df[1,4])
test
text_chunks = as.list(df)
nrow(text_chunks)
length(text_chunks)
max(text_chunks)
test = text_chunks[1]
test
test = text_chunks[1,1]
test = text_chunks[[1]]
test
test = text_chunks[[2]][1]
test
test = text_chunks[[1]][1]
test
nrow(df)
summary = summary(token, test)
summary
test = text_chunks[[4]][1]
test = text_chunks[[2]][1]
test
test = text_chunks[[3]][1]
test
test = text_chunks[[5]][1]
test
test = text_chunks[1]
test
test = text_chunks[1][1]
test
test = text_chunks[1][2]
test
test = text_chunks[2][1]
test
test = text_chunks[1][2]
test
test = text_chunks[1][5]
test
test = text_chunks[1][1]
test
test = text_chunks[2][1]
test
test = text_chunks[[1]][1]
test
test = text_chunks[[2]][1]
test
test = text_chunks[[3]][1]
test
test = text_chunks[[3]][3]
test
df[1,1]
df[4,1]
df[5,1]
test = df[5,1]
summary = summary(token, test)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzExMH0.waXyiiWVTYaiHkpW2fuTcFx9-R67j3_FZBpm0yfEUFg"
summary = summary(token, test)
summary
test = df[6,1]
test
test = df[7,1]
test
test = df[10,1]
test
test = df[16,1]
test
test = df[17,1]
test
test = df[22,1]
test
summary = summary(token, test)
summary
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
summary = summary(token, test)
summary
test
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzExMH0.waXyiiWVTYaiHkpW2fuTcFx9-R67j3_FZBpm0yfEUFg"
summary = summary(token, test)
summary
test = trimws(df[22,1])
test
summary = summary(token, test)
summary
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
test = trimws(df[22,1])
test
summary = summary(token, test)
summary = gsub("[\r\n\t]", "", summary)
summary
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
test = trimws(df[22,1])
test
summary = summary(token, test)
summary = gsub("[\r\n\t]", "", summary)
summary
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(pdftools)
library(reticulate)
library(glue)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzExMH0.waXyiiWVTYaiHkpW2fuTcFx9-R67j3_FZBpm0yfEUFg"
# Load PDF f
test = trimws(df[22,1])
test
summary = summary(token, test)
summary
summary = gsub("[\r\n\t]", "", summary)
summary
summary = trimws(summary(token, test))
summary
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate","glue")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(pdftools)
library(reticulate)
library(glue)
# Put the path to your python environment here
use_python("/Users/lilian.do-khac/.pyenv/versions/3.11.4/bin/python") #   --------> PYTHON ENV SETZEN
py_install("aleph-alpha-client")
py_install("Jinja2")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzExMH0.waXyiiWVTYaiHkpW2fuTcFx9-R67j3_FZBpm0yfEUFg"
# Load PDF file and parse ------------------------------------------------------
pdf_file = "Testfile.pdf"
test = trimws(df[22,1])
test
summary = trimws(summary(token, test))
summary
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Install and or load packages - set variables ---------------------------------
packages <- c("pdftools","reticulate")
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
library(pdftools)
library(reticulate)
# Initialize virtual ENV for Python
Sys.setenv(RETICULATE_PYTHON_ENV = "py_backend")
version <- "3.11"
virtualenv_create(python = virtualenv_starter(version))
virtualenv_install(requirements = "requirements.txt")
# Get your python file
source_python("aa_summarization.py")
token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo0MjcyLCJ0b2tlbl9pZCI6MzIxMH0.wI8tOpxHYMs3lFbZxk-2d4fAazvpzXYnb9n1CEzKDpo"
# Load PDF file and parse ------------------------------------------------------
pdf_file = "Testfile.pdf"
txt = pdf_text(pdf_file)
document = txt[2] # select the page you want to summarize --------> SEITE SETZEN
# Call Aleph Alpha API ---------------------------------------------------------
summary = summary(token, document)
summary
renv::snapshot()
